{"version":3,"sources":["components/Modal.jsx","components/FileList.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["Modal","props","sendFiles","e","preventDefault","files","closeHandler","console","log","state","value","this","btnClasses","cn","className","onSubmit","onClick","type","placeholder","onChange","setState","target","disabled","Component","FileList","selectFileHandler","id","filesIds","selected","map","filter","file","length","buttonStateDisable","fileLoader","data","filesJsApi","Object","keys","forEach","newId","Number","parseInt","Math","floor","random","modal","mapfiles","mappingTupeFiles","img","doc","xlc","ppt","pdf","zip","video","buttonClasses","selectedFiles","name","fileClasses","expClasses","key","App","submitForm","passwords","password","errorPassword","submittingState","renderForm","src","alt","Error","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8d23ce0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport cn from 'classnames';\r\n\r\nexport default class Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n        };\r\n    }\r\n    sendFiles = (e) => {\r\n        e.preventDefault();\r\n        const { files, closeHandler } = this.props;\r\n        console.log(files);\r\n        closeHandler();\r\n    }\r\n    render() {\r\n        const { closeHandler } = this.props;\r\n        const btnClasses = cn({\r\n            'button': true,\r\n            \"disabled-btn\": this.state.value === '',\r\n        })\r\n        return (\r\n            <div>\r\n                <div className=\"container-modal\">\r\n                    <form className=\"modal-card\" onSubmit={this.sendFiles}>\r\n                        <div className=\"modal-header\"><div className=\"close-btn\" onClick={closeHandler}>+</div></div>\r\n                        <div className=\"modal-icon\"></div>\r\n                        <div className=\"title\">Enter your e-mail</div>\r\n                        <input type=\"email\" placeholder=\"E-mail\" className=\"email-input\"\r\n                            value={this.state.value} onChange={(e) => this.setState({ value: e.target.value })} />\r\n                        <input type=\"submit\" disabled={this.state.value === ''} className={btnClasses} value=\"Send to me\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport cn from 'classnames';\r\n\r\n// import axios from 'axios';\r\n\r\nimport Modal from './Modal.jsx';\r\n\r\nexport default class FileList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: {\r\n                \"11\": {\r\n                    \"id\": 11,\r\n                    \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n                    \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"22\": {\r\n                    \"id\": 22,\r\n                    \"type\": \"image/jpeg\",\r\n                    \"name\": \"Фото.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"21\": {\r\n                    \"id\": 21,\r\n                    \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n                    \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"42\": {\r\n                    \"id\": 42,\r\n                    \"type\": \"image/jpeg\",\r\n                    \"name\": \"Фото.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"61\": {\r\n                    \"id\": 61,\r\n                    \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n                    \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"72\": {\r\n                    \"id\": 72,\r\n                    \"type\": \"image/jpeg\",\r\n                    \"name\": \"Фото.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"15\": {\r\n                    \"id\": 15,\r\n                    \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n                    \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"224\": {\r\n                    \"id\": 224,\r\n                    \"type\": \"image/jpeg\",\r\n                    \"name\": \"Фото.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n                \"9\": {\r\n                    \"id\": 9,\r\n                    \"type\": \"image/jpeg\",\r\n                    \"name\": \"Фото.docx (образец)\",\r\n                    \"selected\": false\r\n                },\r\n            },\r\n            filesIds: [11, 22, 21, 42, 61, 72, 15, 224, 9],\r\n            modal: false,\r\n            buttonStateDisable: true,\r\n        }\r\n    }\r\n\r\n    // скрипт для получения данных из API\r\n\r\n    // componentDidMount() {\r\n    //     axios.get('http://localhost:3004/files').then((res) => {\r\n    //         this.fileLoader(res.data)\r\n    //     })\r\n    // }\r\n\r\n    selectFileHandler = (id) => (e) => {\r\n        const { files, filesIds } = this.state;\r\n        files[id].selected = !files[id].selected;\r\n        this.setState({ files: { [id]: files[id], ...files } });\r\n\r\n        const mapfiles = filesIds.map((id) => files[id]);\r\n        const selectedFiles = mapfiles.filter((file) => file.selected === true);\r\n\r\n        if (selectedFiles.length > 0) {\r\n            this.setState({ buttonStateDisable: false });\r\n        }\r\n        else {\r\n            this.setState({ buttonStateDisable: true });\r\n        }\r\n    }\r\n\r\n    fileLoader = (data) => {\r\n        const filesJsApi = Object.keys(data);\r\n        const files = {};\r\n        filesJsApi.forEach((id) => {\r\n            const newId = Number.parseInt(Math.floor(Math.random() * 1000));\r\n            data[id].selected = false;\r\n            data[id].id = newId;\r\n            files[newId] = data[id];\r\n        });\r\n        this.setState({\r\n            files: { ...files, ...this.state.files },\r\n            filesIds: [...Object.keys(files), ...this.state.filesIds]\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { files, filesIds, modal, buttonStateDisable } = this.state;\r\n        //console.log(files, filesIds);\r\n        const mapfiles = filesIds.map((id) => files[id]);\r\n\r\n        const mappingTupeFiles = {\r\n            img: {\r\n                \"image/png\": true,\r\n                \"image/jpeg\": true,\r\n                \"image/svg+xml\": true,\r\n            },\r\n            doc: {\r\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document': true,\r\n            },\r\n            xlc: {\r\n                \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": true\r\n            },\r\n            ppt: {\r\n                \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": true,\r\n            },\r\n            pdf: {\r\n                \"application/pdf\": true,\r\n            },\r\n            zip: {\r\n                'application/x-zip-compressed': true,\r\n            },\r\n            video: {\r\n                \"video/mp4\": true\r\n            }\r\n        }\r\n\r\n        const buttonClasses = cn({\r\n            \"disabled-btn\": buttonStateDisable,\r\n            \"button\": true\r\n        });\r\n        if (filesIds.length === 0) {\r\n            return (\r\n                <div className=\"content-investors\">\r\n                    <div className=\"logo-container\">\r\n                        <div className=\"logo-background\">\r\n                            <div className=\"logo\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"light-theme-title\">Welcome, Investor!</div>\r\n                    <div className=\"investors-list-container\">\r\n                        <div className=\"title-files-list\">No files</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        const selectedFiles = mapfiles.filter((file) => file.selected === true)\r\n\r\n        return (\r\n            <div className=\"content-investors\">\r\n                <div className=\"logo-container\">\r\n                    <div className=\"logo-background\">\r\n                        <div className=\"logo\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"light-theme-title\">Welcome, Investor!</div>\r\n                <div className=\"investors-list-container\">\r\n                    <ul className=\"file-list\">\r\n                        {mapfiles.map(({ id, type, name, selected }) => {\r\n                            const fileClasses = cn({\r\n                                \"selected-file\": selected,\r\n                                'file': true\r\n                            })\r\n                            const expClasses = cn({\r\n                                \"type-icon\": true,\r\n                                \"img\": mappingTupeFiles.img[type],\r\n                                \"docx\": mappingTupeFiles.doc[type],\r\n                                \"ppt\": mappingTupeFiles.ppt[type],\r\n                                \"xlc\": mappingTupeFiles.xlc[type],\r\n                                \"zip\": mappingTupeFiles.zip[type],\r\n                                \"pdf\": mappingTupeFiles.pdf[type],\r\n                                'video': mappingTupeFiles.video[type]\r\n                            })\r\n\r\n\r\n                            return (\r\n                                <li key={id} className={fileClasses} onClick={this.selectFileHandler(id)}>\r\n                                    <div className={expClasses}></div>\r\n                                    <div className=\"text-file\">{name}</div>\r\n                                </li>\r\n                            )\r\n\r\n\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <input\r\n                    type=\"submit\"\r\n                    disabled={this.state.buttonStateDisable}\r\n                    onClick={() => this.setState({ modal: true })}\r\n                    className={buttonClasses}\r\n                    value=\"Send to me!\" />\r\n                {modal && <Modal files={selectedFiles} closeHandler={() => this.setState({ modal: false })} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React from 'react'\r\nimport FileList from './FileList.jsx';\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submittingState: 'fillingForm',\r\n      value: '',\r\n      passwords: [\"admin\", \"user\"],\r\n      errorPassword: false\r\n    };\r\n  }\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const { value, passwords } = this.state;\r\n\r\n    passwords.forEach((password) => {\r\n      if (value === password) {\r\n        this.setState({ errorPassword: false });\r\n        this.setState({ submittingState: 'submitted' })\r\n      } \r\n      else {\r\n        this.setState({ errorPassword: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderForm = () => {\r\n    return (\r\n      <div className=\"content-investors\">\r\n        <div className=\"logo-container\">\r\n          <div className=\"logo-background\">\r\n            <img src=\"../img/logo.png\" alt=\"\" className=\"logo\" />\r\n          </div>\r\n        </div>\r\n        <form className=\"investors-from\" onSubmit={this.submitForm}>\r\n          <div className=\"title\">Welcome, Investor!</div>\r\n          <input type=\"password\" placeholder=\"Password\" className=\"password-field\"\r\n            value={this.state.value} onChange={(e) => this.setState({ value: e.target.value })} />\r\n            {this.state.errorPassword && <div className=\"fail-pass\">Uncorected Password!</div>}\r\n          <input type=\"submit\" value=\"Enter\" className=\"button\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { submittingState } = this.state;\r\n    switch (submittingState) {\r\n      case 'fillingForm':\r\n        return this.renderForm();\r\n      case 'submitted':\r\n        return <FileList />\r\n      default:\r\n        throw new Error(`'${submittingState}' - unknown state`);\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <div className=\"investors-page\">\n      <div className=\"container \">\n        <div className=\"header\"> */}\n          <App />\n        {/* </div>\n      </div>\n    </div> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}