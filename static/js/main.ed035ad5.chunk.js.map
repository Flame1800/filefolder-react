{"version":3,"sources":["components/FileList.jsx","components/App.jsx","index.js"],"names":["FileList","props","selectFileHandler","id","e","state","files","filesIds","selected","setState","map","filter","file","length","buttonStateDisable","sendFiles","preventDefault","closeHandler","password","console","log","clearSelect","forEach","modalHandler","modal","this","mapfiles","mappingTupeFiles","img","doc","xlc","ppt","pdf","zip","video","buttonClasses","cn","className","type","name","fileClasses","expClasses","key","onClick","disabled","value","onSubmit","Component","App","submitForm","passwords","submittingState","currentPassword","errorPassword","renderForm","placeholder","onChange","target","userRole","Error","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed035ad5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport cn from 'classnames';\r\n// import axios from 'axios';\r\n\r\nexport default class FileList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // files: { Заполненные данные для теста\r\n            //     \"11\": {\r\n            //         \"id\": 11,\r\n            //         \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n            //         \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"22\": {\r\n            //         \"id\": 22,\r\n            //         \"type\": \"image/jpeg\",\r\n            //         \"name\": \"Фото.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"21\": {\r\n            //         \"id\": 21,\r\n            //         \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n            //         \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"42\": {\r\n            //         \"id\": 42,\r\n            //         \"type\": \"image/jpeg\",\r\n            //         \"name\": \"Фото.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"61\": {\r\n            //         \"id\": 61,\r\n            //         \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n            //         \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"72\": {\r\n            //         \"id\": 72,\r\n            //         \"type\": \"image/jpeg\",\r\n            //         \"name\": \"Фото.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"15\": {\r\n            //         \"id\": 15,\r\n            //         \"type\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n            //         \"name\": \"Документ Microsoft Office Word.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"224\": {\r\n            //         \"id\": 224,\r\n            //         \"type\": \"image/jpeg\",\r\n            //         \"name\": \"Фото.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            //     \"9\": {\r\n            //         \"id\": 9,\r\n            //         \"type\": \"image/jpeg\",\r\n            //         \"name\": \"Фото.docx (образец)\",\r\n            //         \"selected\": false\r\n            //     },\r\n            // },\r\n            // filesIds: [11, 22, 21, 42, 61, 72, 15, 224, 9],\r\n            files: {},\r\n            filesIds: [],\r\n            modal: false,\r\n            buttonStateDisable: true,\r\n        }\r\n    }\r\n\r\n    //************\r\n    // скрипт для получения данных из API\r\n    // **********\r\n\r\n    // componentDidMount() {\r\n    //     axios.get('http://localhost:3004/files').then((res) => {\r\n    //         this.fileLoader(res.data);\r\n    //     })\r\n    // }\r\n\r\n    selectFileHandler = (id) => (e) => {\r\n        const { files, filesIds } = this.state;\r\n        files[id].selected = !files[id].selected;\r\n        this.setState({ files: { [id]: files[id], ...files } });\r\n\r\n        const mapfiles = filesIds.map((id) => files[id]);\r\n        const selectedFiles = mapfiles.filter((file) => file.selected === true);\r\n\r\n        if (selectedFiles.length > 0) {\r\n            this.setState({ buttonStateDisable: false });\r\n        }\r\n        else {\r\n            this.setState({ buttonStateDisable: true });\r\n        }\r\n    }\r\n    //************\r\n    // Функция загужающая файлы\r\n    // **********\r\n\r\n    // fileLoader = (data) => {\r\n    //     const filesJsApi = Object.keys(data);\r\n    //     const files = {};\r\n    //     filesJsApi.forEach((id) => {\r\n    //         data[id].selected = false;\r\n    //         data[id].id = id;\r\n    //         files[id] = data[id];\r\n    //     });\r\n    //     this.setState({\r\n    //         files: { ...files, ...this.state.files },\r\n    //         filesIds: [...Object.keys(files), ...this.state.filesIds]\r\n    //     });\r\n    // }\r\n\r\n\r\n    sendFiles = (e) => {\r\n        e.preventDefault();\r\n        const { files, closeHandler } = this.state;\r\n        const { password } = this.props;\r\n\r\n        //***********************************************************\r\n        // Тут будет логика отправления файлов и мейла в бекенд !\r\n        //***********************************************************\r\n\r\n        console.log(files, password);\r\n        closeHandler();\r\n    }\r\n\r\n    clearSelect = () => {\r\n        const { files, filesIds } = this.state;\r\n        filesIds.forEach(id => files[id].selected = false);\r\n        this.setState({ files: files });\r\n    }\r\n\r\n    modalHandler = () => this.setState({ modal: !this.state.modal });\r\n\r\n    render() {\r\n        const { password } = this.props;\r\n        const { files, filesIds, modal, buttonStateDisable } = this.state;\r\n        const mapfiles = filesIds.map((id) => files[id]);\r\n        const mappingTupeFiles = {\r\n            img: {\r\n                \"image/png\": true,\r\n                \"image/jpeg\": true,\r\n                \"image/svg+xml\": true,\r\n            },\r\n            doc: {\r\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document': true,\r\n            },\r\n            xlc: {\r\n                \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": true\r\n            },\r\n            ppt: {\r\n                \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": true,\r\n            },\r\n            pdf: {\r\n                \"application/pdf\": true,\r\n            },\r\n            zip: {\r\n                'application/x-zip-compressed': true,\r\n            },\r\n            video: {\r\n                \"video/mp4\": true\r\n            }\r\n        }\r\n\r\n\r\n        const buttonClasses = cn({\r\n            \"disabled-btn\": buttonStateDisable,\r\n            \"button\": true\r\n        });\r\n        // if (filesIds.length === 0) {\r\n        //     return (\r\n        //         <div className=\"content-investors\">\r\n        //             <div className=\"logo-container\">\r\n        //                 <div className=\"logo-background\">\r\n        //                     <div className=\"logo\"></div>\r\n        //                 </div>\r\n        //             </div>\r\n        //             <div className=\"light-theme-title\">Welcome, Investor!</div>\r\n        //             <div className=\"investors-list-container\">\r\n        //                 <div className=\"title-files-list\">No files</div>\r\n        //             </div>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n\r\n        return (\r\n            <div className=\"content-investors\">\r\n                <div className=\"logo-container\">\r\n                    <div className=\"logo-background\">\r\n                        <div className=\"logo-filefolder\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"investors-list-container\">\r\n                    <div className=\"title\">Welcome, Investor!</div>\r\n                    <div className=\"subtitile-filelist\">\r\n                        Here you can choose which files you would <br /> like to receive to Your e-mail\r\n                    </div>\r\n                    <hr />\r\n                    <ul className=\"file-list\">\r\n                        {mapfiles.map(({ id, type, name, selected }) => {\r\n                            const fileClasses = cn({\r\n                                \"selected-file\": selected,\r\n                                'noselected-file': !selected\r\n                            })\r\n                            const expClasses = cn({\r\n                                \"type-icon\": true,\r\n                                \"img\": mappingTupeFiles.img[type],\r\n                                \"docx\": mappingTupeFiles.doc[type],\r\n                                \"ppt\": mappingTupeFiles.ppt[type],\r\n                                \"xlc\": mappingTupeFiles.xlc[type],\r\n                                \"zip\": mappingTupeFiles.zip[type],\r\n                                \"pdf\": mappingTupeFiles.pdf[type],\r\n                                'video': mappingTupeFiles.video[type]\r\n                            })\r\n                            return (\r\n                                <li key={id} className={fileClasses} onClick={this.selectFileHandler(id)}>\r\n                                    <div className={expClasses}></div>\r\n                                    <div className=\"text-file\">{name}</div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                    <hr />\r\n                    <div className=\"footer-btn\">\r\n                        {/* <div className=\"btn-more\">Show more...</div> К\r\n                            Конпка \"показать больше\"\r\n                        */}\r\n                        <div className=\"btn-clear\" onClick={this.clearSelect}>Clear</div>\r\n                    </div>\r\n                </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        disabled={this.state.buttonStateDisable}\r\n                        onClick={this.modalHandler}\r\n                        className={buttonClasses}\r\n                        value=\"Send to me!\" />\r\n\r\n                {modal &&\r\n                    <div className=\"container-modal\">\r\n                        <div className=\"modal-card\" onSubmit={this.sendFiles}>\r\n                            <div className=\"modal-header\"><div className=\"close-btn\" onClick={this.modalHandler}>+</div></div>\r\n                            <div className=\"modal-icon\"></div>\r\n                            <div className=\"title\">Thank You for your interest!</div>\r\n                            <div className=\"subtitle\">Thank You for your interest! Selected files has been sent to {password} address</div>\r\n                            <div className=\"button modal-button\" onClick={this.modalHandler}>Ok!</div>\r\n                        </div>\r\n\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React from 'react'\r\nimport FileList from './FileList.jsx';\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submittingState: 'fillingForm',\r\n      value: '',\r\n      passwords: [\"admin\", \"user\"], // список паролей(emails)\r\n      errorPassword: false,\r\n      currentPassword: '',\r\n    };\r\n  }\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const { value, passwords } = this.state;\r\n\r\n    passwords.forEach((password) => {\r\n      if (value === password) {\r\n        this.setState({ \r\n          submittingState: 'submitted',\r\n          currentPassword: value,\r\n          errorPassword: false \r\n        });\r\n      } \r\n      else {\r\n        this.setState({ errorPassword: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderForm = () => {\r\n    return (\r\n      <div className=\"content-investors\">\r\n        <div className=\"logo-container\">\r\n          <div className=\"logo-background\">\r\n            <div className=\"logo\" />\r\n            <div className=\"title\">Welcome, Investor!</div>\r\n          </div>\r\n        </div>\r\n        <form className=\"investors-from\" onSubmit={this.submitForm}>\r\n          <div className=\"title\">Enter the password You received</div>\r\n          <div className=\"subtitle\">Contact us at info@stonebush.com to obtain one</div>\r\n          <input type=\"password\" placeholder=\"Password\" className=\"password-field\"\r\n            value={this.state.value} onChange={(e) => this.setState({ value: e.target.value })} />\r\n            {this.state.errorPassword && <div className=\"fail-pass\">Wrong Password!</div>}\r\n          <input type=\"submit\" value=\"Enter\" className=\"button\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    const { submittingState } = this.state;\r\n    switch (submittingState) {\r\n      case 'fillingForm':\r\n        return this.renderForm();\r\n      case 'submitted':\r\n        return <FileList userRole={this.state.userRole} password={this.state.value} />\r\n      default:\r\n        throw new Error(`'${submittingState}' - unknown state`);\r\n    }\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*\n    Отключил задний фон, для продакшена\n    \n    <div className='investors-page'>\n      <div className=\"container\">\n        <div className='header'> */}\n          <App />\n        {/* </div>\n      </div>\n    </div> */}\n  </React.StrictMode>,\n  document.getElementById('root') \n  // Можно поеменять root на другой элемент\n);\n\n\n"],"sourceRoot":""}